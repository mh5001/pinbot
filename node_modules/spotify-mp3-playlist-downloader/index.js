var spotifyPlaylist = require('spotify-playlist');
var toUrl = require('./uri-url');
var download = require('./download');
var spotify = require('spotify-data');
var fs = require('fs');
spotify.uri = require('spotify-uri');

// uriIN: Spotify playlist URI
// done: Callback when download to uriIN folder is done
// update: Called during download progress
module.exports = {}
module.exports.downloadPlaylist = function(uriIN, directory, doneCallback, update) {
    if (!update){
        update = function(){};
    }

    var uri = uriIN;
    console.log(uri);

    spotifyPlaylist.playlistUri(uri, function(err, data){
        console.log("Got playlist");
        if (err == "Fail!"){
            console.log(callback);
            console.log(update);
            update("Invalid playlist");
            doneCallback("Invalid playlist");
            return;
        }
        var tracks = data.playlist.tracks
        fs.mkdir("./" + directory, function(err)
        {
            if (err == null){
                downloadTracks(directory, tracks);
            }else {
                doneCallback("Directory creation failed");
            }
        })
    });

    function downloadTracks(directory, tracks)
    {
        console.log(tracks);
        var total = tracks.length
        var done = 0
        tracks.forEach((track, index)=>{
            spotify.track(track.id, function(err, track2){
                console.log(track2);
                if (track2 && track2.track.album){
                    track.album = track2.track.album
                }else {
                    console.log("No album found");
                    track.album = {}
                }
                toUrl(track, function(err, data){
                    if (data){
                        download(index, directory, track, data.id, function (err){
                            done++;
                            console.log(done + " out of " + total + " downloaded");
                            update(done + " out of " + total + " downloaded");
                            if (err){
                                console.log("Download failed for " + track.name);
                            }
                            if (done == total){
                                doneCallback(null);
                            }
                        })
                    }else {
                        console.log("Youtube search failed for " + track.name);
                        done++;
                        if (done == total){
                            doneCallback(null);
                        }
                    }
                });
            });

        });
    }
}

module.exports.downloadTrack = function(uri, filename, doneCallback){
    console.log(spotify.uri.parse(uri).id);
    spotify.track("6bc5scNUVa3h76T9nvpGIH", function(err, track){
        console.log(track);
        toUrl(track, function(err, data){
            if (data){
                download(filename, directory, track, data.id, function (err){
                    doneCallback(err)
                })
            }else {
                console.log("Youtube search failed for " + track.name);
                doneCallback(err)
            }
        });
    });
}
