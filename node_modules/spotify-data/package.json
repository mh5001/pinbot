{
  "_args": [
    [
      {
        "raw": "spotify-data@*",
        "scope": null,
        "escapedName": "spotify-data",
        "name": "spotify-data",
        "rawSpec": "*",
        "spec": "*",
        "type": "range"
      },
      "C:\\Users\\user\\Desktop\\Others\\Discord Bots\\PinBot\\node_modules\\spotify-mp3-playlist-downloader"
    ]
  ],
  "_from": "spotify-data@*",
  "_id": "spotify-data@0.0.4",
  "_inCache": true,
  "_location": "/spotify-data",
  "_npmUser": {
    "name": "minigod",
    "email": "kristjan.1234@gmail.com"
  },
  "_npmVersion": "1.2.2",
  "_phantomChildren": {
    "aws-sign": "0.3.0",
    "cheerio-select": "0.0.3",
    "cookie-jar": "0.3.0",
    "core-util-is": "1.0.2",
    "ctype": "0.5.3",
    "domelementtype": "1.3.0",
    "inherits": "2.0.3",
    "json-stringify-safe": "5.0.1"
  },
  "_requested": {
    "raw": "spotify-data@*",
    "scope": null,
    "escapedName": "spotify-data",
    "name": "spotify-data",
    "rawSpec": "*",
    "spec": "*",
    "type": "range"
  },
  "_requiredBy": [
    "/spotify-mp3-playlist-downloader"
  ],
  "_resolved": "https://registry.npmjs.org/spotify-data/-/spotify-data-0.0.4.tgz",
  "_shasum": "f59258917fb99498a7661465da79d7454da72381",
  "_shrinkwrap": null,
  "_spec": "spotify-data@*",
  "_where": "C:\\Users\\user\\Desktop\\Others\\Discord Bots\\PinBot\\node_modules\\spotify-mp3-playlist-downloader",
  "bugs": {
    "url": "https://github.com/MiniGod/node-spotify-data/issues"
  },
  "dependencies": {
    "cheerio": "~0.12.1",
    "request": "~2.27.0",
    "spotify-uri": "~0.1.0"
  },
  "description": "Simple spotify metadata. Supports playlist, cover art, artist, album and track.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "f59258917fb99498a7661465da79d7454da72381",
    "tarball": "https://registry.npmjs.org/spotify-data/-/spotify-data-0.0.4.tgz"
  },
  "homepage": "https://github.com/MiniGod/node-spotify-data#readme",
  "keywords": [
    "spotify",
    "metadata",
    "playlist",
    "cover art"
  ],
  "maintainers": [
    {
      "name": "minigod",
      "email": "kristjan.1234@gmail.com"
    }
  ],
  "name": "spotify-data",
  "optionalDependencies": {},
  "readme": "node-spotify-data\n=================\n\nSimple spotify metadata. Supports playlist, cover art, artist, album and track.\n\n## Install\n\n`npm install spotify-data --save`\n\n## Parsing URIs\n`spotify.uri = require('spotify-uri');` - https://github.com/TooTallNate/spotify-uri\n\n```\nvar parsed = spotify.uri.parse('spotify:track:1pKYYY0dkg23sQQXi0Q5zN')\n// { uri: 'spotify:track:1pKYYY0dkg23sQQXi0Q5zN',\n//   type: 'track',\n//   id: '1pKYYY0dkg23sQQXi0Q5zN' }\n\nspotify.uri.formatURI(parsed);\n// 'spotify:track:1pKYYY0dkg23sQQXi0Q5zN'\n\n// and more... see https://github.com/TooTallNate/spotify-uri\n```\n\n## Available methods\n\n```javascript\nvar spotify = require('spotify-data');\n\n// All callbacks are called with:\nvar callback = function(err, result) {\n\t// ...\n}\n\n// Lookup\n// spotify.lookup(uri, callback);\n// \n// - returns response from spotifys metadata web api\nspotify.lookup('spotify:track:6bc5scNUVa3h76T9nvpGIH', console.log);\nspotify.lookup('spotify:artist:7ae4vgLLhir2MCjyhgbGOQ', console.log);\nspotify.lookup('spotify:album:5NCz8TTIiax2h1XTnImAQ2', console.log);\nspotify.lookup('spotify:user:syknyk:playlist:0Idyatn0m08Y48tiOovNd9', console.log);\n\n// Lookup alternative:\n// spotify.<type>(id, callback);\n// spotify.playlist(user, id, callback);\nspotify.track('6bc5scNUVa3h76T9nvpGIH', console.log);\nspotify.artist('7ae4vgLLhir2MCjyhgbGOQ', console.log);\nspotify.album('5NCz8TTIiax2h1XTnImAQ2', console.log);\nspotify.playlist('syknyk', '0Idyatn0m08Y48tiOovNd9', console.log);\n\n// Cover:\n// spotify.cover(uri, [size,] callback);\n// \n// - returns url to cover\n// - available sizes: 60, 85, 120, 300, 640, 'cover'.\n//     defaults to 'cover', which is 300x300, with a spotify logo in lower right corner.\n// - sizes are also available in `spotify.coverSize`.\nspotify.cover('spotify:track:6bc5scNUVa3h76T9nvpGIH', console.log);\nspotify.cover('spotify:artist:7ae4vgLLhir2MCjyhgbGOQ', console.log);\nspotify.cover('spotify:album:5NCz8TTIiax2h1XTnImAQ2', console.log);\nspotify.cover('spotify:user:syknyk:playlist:0Idyatn0m08Y48tiOovNd9', console.log);\n\n// Size examples:\nspotify.cover('spotify:track:6bc5scNUVa3h76T9nvpGIH', spotify.coverSize.SMALL, console.log);\nspotify.cover('spotify:artist:7ae4vgLLhir2MCjyhgbGOQ', spotify.coverSize.NORMAL, console.log);\nspotify.cover('spotify:album:5NCz8TTIiax2h1XTnImAQ2', spotify.coverSize.LARGE, console.log);\nspotify.cover('spotify:user:syknyk:playlist:0Idyatn0m08Y48tiOovNd9', 120, console.log);\n\n// Cover alternative:\n// spotify.<type>.cover(id, [size,] callback)\n// spotify.playlist.cover(user, id, [size,] callback);\nspotify.track.cover('6bc5scNUVa3h76T9nvpGIH', console.log);\nspotify.artist.cover('7ae4vgLLhir2MCjyhgbGOQ', console.log);\nspotify.album.cover('5NCz8TTIiax2h1XTnImAQ2', console.log);\nspotify.playlist.cover('syknyk', '0Idyatn0m08Y48tiOovNd9', console.log);\n\n// Flatten\n// spotify.flatten(id, callback);\n// \n// - returns array of tracks from any uri or array of uris.\nspotify.flatten('spotify:track:6bc5scNUVa3h76T9nvpGIH', console.log);\nspotify.flatten('spotify:artist:7ae4vgLLhir2MCjyhgbGOQ', console.log);\nspotify.flatten('spotify:album:5NCz8TTIiax2h1XTnImAQ2', console.log);\nspotify.flatten('spotify:user:syknyk:playlist:0Idyatn0m08Y48tiOovNd9', console.log);\n\n// Flatten alternative:\n// spotify.<type>.flatten(id, callback);\n// spotify.playlist.flatten(user, id, callback);\nspotify.track.flatten('6bc5scNUVa3h76T9nvpGIH', console.log);\nspotify.artist.flatten('7ae4vgLLhir2MCjyhgbGOQ', console.log);\nspotify.album.flatten('5NCz8TTIiax2h1XTnImAQ2', console.log);\nspotify.playlist.flatten('syknyk', '0Idyatn0m08Y48tiOovNd9', console.log);\n\n// Flatten list of any URIs:\n// spotify.flatten(uris, callback);\nvar uris = [\n\t'spotify:album:5NCz8TTIiax2h1XTnImAQ2',\n\t'spotify:track:3gGhcHH075qI9CPSXKnxy1',\n\t'spotify:artist:5RBdF1pJSLF3ugc2Y2PoB8',\n\t'spotify:user:syknyk:playlist:0Idyatn0m08Y48tiOovNd9'\n];\nspotify.flatten(uris, console.log);\n```\n\nFlatten does not guarantee a list of unique tracks.\nE.g.: Using `.flatten` on an `artist` will return a lot of duplicates, because most albums are released in many different territories (countries) by different labels, and each album have their own listing of tracks.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/MiniGod/node-spotify-data.git"
  },
  "version": "0.0.4"
}
